<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title><%= title %> Â· Reading Tracker</title>
    <link rel="stylesheet" href="/public/styles.css" />
  </head>
  <body>
    <header class="container">
      <h1>Reading Tracker</h1>
      <nav>
        <a href="/books">Books</a>
        <a href="/books/new" class="btn">Add</a>
      </nav>
    </header>
    <main class="container">
      <section>
        <form class="filters" method="get" action="/books" id="filtersForm">
          <label>Status
            <select name="status">
              <option value="" <%= !filters.status ? 'selected' : '' %>>All</option>
              <option value="planned" <%= filters.status==='planned'?'selected':'' %>>Planned</option>
              <option value="reading" <%= filters.status==='reading'?'selected':'' %>>Reading</option>
              <option value="done" <%= filters.status==='done'?'selected':'' %>>Done</option>
            </select>
          </label>
          <label>Search
            <input type="text" name="q" value="<%= filters.q %>" placeholder="Title or author" />
          </label>
          <label>Sort
            <select name="sort">
              <option value="createdAt" <%= filters.sort==='createdAt'?'selected':'' %>>Created</option>
              <option value="title" <%= filters.sort==='title'?'selected':'' %>>Title</option>
              <option value="author" <%= filters.sort==='author'?'selected':'' %>>Author</option>
              <option value="status" <%= filters.sort==='status'?'selected':'' %>>Status</option>
              <option value="dueDate" <%= filters.sort==='dueDate'?'selected':'' %>>Due date</option>
            </select>
          </label>
          <a class="btn secondary" href="/books">Reset</a>
          <a class="btn secondary" href="/books/export">Export JSON</a>
          <a class="btn" href="/books/import">Import</a>
        </form>

        <div id="listRoot">
          <%- include('partials/list', { books, stats, dayjs }) %>
        </div>
      </section>
    </main>
    <footer class="container muted">
      <p>Server-rendered with Express + EJS</p>
    </footer>
    <script>
      (function(){
        const form = document.getElementById('filtersForm');
        if(!form) return;
        const statusEl = form.querySelector('select[name="status"]');
        const sortEl = form.querySelector('select[name="sort"]');
        const qEl = form.querySelector('input[name="q"]');

        function updateUrl() {
          const params = new URLSearchParams(window.location.search);
          const status = statusEl.value.trim();
          const sort = sortEl.value.trim();
          const q = qEl.value.trim();
          status ? params.set('status', status) : params.delete('status');
          sort ? params.set('sort', sort) : params.delete('sort');
          q ? params.set('q', q) : params.delete('q');
          const query = params.toString();
          const url = query ? `/books?${query}` : '/books';
          const focused = document.activeElement;
          const cursorPos = focused && focused.selectionStart;
          fetch(url + (url.includes('?') ? '&' : '?') + 'partial=1').then(r=>r.text()).then(html=>{
            const root = document.getElementById('listRoot');
            if (root) root.innerHTML = html;
            window.history.replaceState({}, '', url);
            if (focused && focused.name === 'q') {
              focused.focus();
              if (typeof cursorPos === 'number') focused.setSelectionRange(cursorPos, cursorPos);
            }
          });
        }

        function debounce(fn, ms){
          let t; return function(){ clearTimeout(t); t=setTimeout(fn, ms); };
        }

        if (statusEl) statusEl.addEventListener('change', updateUrl);
        if (sortEl) sortEl.addEventListener('change', updateUrl);
        if (qEl) qEl.addEventListener('input', debounce(updateUrl, 300));
      })();
    </script>
  </body>
  </html>


